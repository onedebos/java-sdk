/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallUpdateAUser {
        org.openapis.openapi.models.operations.UpdateAUserResponse updateAUser(
            String userId,
            Optional<? extends org.openapis.openapi.models.operations.UpdateAUserRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallGetAUser {
        org.openapis.openapi.models.operations.GetAUserResponse getAUser(
            String userId) throws Exception;
    }


    public interface MethodCallDeleteAUser {
        org.openapis.openapi.models.operations.DeleteAUserResponse deleteAUser(
            String userId) throws Exception;
    }


    public interface MethodCallCreateAUser {
        org.openapis.openapi.models.operations.CreateAUserResponse createAUser(
            Optional<? extends org.openapis.openapi.models.operations.CreateAUserRequestBody> request) throws Exception;
    }


    public interface MethodCallListAllUsers {
        org.openapis.openapi.models.operations.ListAllUsersResponse listAllUsers(
            Optional<? extends String> parentWorkflowId) throws Exception;
    }


    public interface MethodCallCreateACredential {
        org.openapis.openapi.models.operations.CreateACredentialResponse createACredential(
            Optional<? extends org.openapis.openapi.models.operations.CreateACredentialRequestBody> request) throws Exception;
    }


    public interface MethodCallGetCredentialMetadata {
        org.openapis.openapi.models.operations.GetCredentialMetadataResponse getCredentialMetadataDirect() throws Exception;
    }


    public interface MethodCallGenerateJwtToken {
        org.openapis.openapi.models.operations.GenerateJwtTokenResponse generateJwtToken(
            String userId) throws Exception;
    }


    public interface MethodCallListUserCredentials {
        org.openapis.openapi.models.operations.ListUserCredentialsResponse listUserCredentials(
            String userId) throws Exception;
    }


    public interface MethodCallListWorkflows {
        org.openapis.openapi.models.operations.ListWorkflowsResponse listWorkflows(
            Optional<? extends String> integration,
            String userId) throws Exception;
    }


    public interface MethodCallDeactivateAWorkflow {
        org.openapis.openapi.models.operations.DeactivateAWorkflowResponse deactivateAWorkflow(
            Optional<? extends org.openapis.openapi.models.operations.DeactivateAWorkflowRequestBody> request) throws Exception;
    }


    public interface MethodCallActivateAWorkflow {
        org.openapis.openapi.models.operations.ActivateAWorkflowResponse activateAWorkflow(
            Optional<? extends org.openapis.openapi.models.operations.ActivateAWorkflowRequestBody> request) throws Exception;
    }


    public interface MethodCallGetWorkflowAnalytics {
        org.openapis.openapi.models.operations.GetWorkflowAnalyticsResponse getWorkflowAnalytics(
            String workflowId) throws Exception;
    }


    public interface MethodCallDisableAllWorkflowsForAUser {
        org.openapis.openapi.models.operations.DisableAllWorkflowsForAUserResponse disableAllWorkflowsForAUser(
            String userId) throws Exception;
    }


    public interface MethodCallGetWorkflowLogs {
        org.openapis.openapi.models.operations.GetWorkflowLogsResponse getWorkflowLogs(
            org.openapis.openapi.models.operations.GetWorkflowLogsRequest request) throws Exception;
    }


    public interface MethodCallGetWorkflowErrors {
        org.openapis.openapi.models.operations.GetWorkflowErrorsResponse getWorkflowErrors(
            String workflowId,
            Optional<? extends String> userId) throws Exception;
    }


    public interface MethodCallDeleteLogsForAUser {
        org.openapis.openapi.models.operations.DeleteLogsForAUserResponse deleteLogsForAUser(
            String userId) throws Exception;
    }


    public interface MethodCallDeleteACredential {
        org.openapis.openapi.models.operations.DeleteACredentialResponse deleteACredential(
            String credentialId,
            String userId) throws Exception;
    }


    public interface MethodCallRunEvent {
        org.openapis.openapi.models.operations.RunEventResponse runEvent(
            Optional<? extends org.openapis.openapi.models.operations.RunEventRequestBody> request) throws Exception;
    }


    public interface MethodCallRerunWorkfow {
        org.openapis.openapi.models.operations.RerunWorkfowResponse rerunWorkfow(
            String workflowId,
            String executionId,
            String userId) throws Exception;
    }


    public interface MethodCallRunWorkflow {
        org.openapis.openapi.models.operations.RunWorkflowResponse runWorkflow(
            Optional<? extends org.openapis.openapi.models.operations.RunWorkflowRequestBody> request) throws Exception;
    }


    public interface MethodCallListApps {
        org.openapis.openapi.models.operations.ListAppsResponse listAppsDirect() throws Exception;
    }


    public interface MethodCallListIntegrations {
        org.openapis.openapi.models.operations.ListIntegrationsResponse listIntegrations(
            String userId) throws Exception;
    }


    public interface MethodCallListEvents {
        org.openapis.openapi.models.operations.ListEventsResponse listEventsDirect() throws Exception;
    }


    public interface MethodCallGenerateAlloyLink {
        org.openapis.openapi.models.operations.GenerateAlloyLinkResponse generateAlloyLink(
            String userId,
            String integrationId) throws Exception;
    }


    public interface MethodCallGenerateOauthLink {
        org.openapis.openapi.models.operations.GenerateOauthLinkResponse generateOauthLink(
            String userId,
            Optional<? extends String> app,
            Optional<? extends String> credentialName) throws Exception;
    }


    public interface MethodCallDeleteWorkflow {
        org.openapis.openapi.models.operations.DeleteWorkflowResponse deleteWorkflow(
            String userId,
            String workflowId) throws Exception;
    }


    public interface MethodCallFindAWorkflow {
        org.openapis.openapi.models.operations.FindAWorkflowResponse findAWorkflow(
            String userId,
            String workflowId) throws Exception;
    }


    public interface MethodCallGetAnIntegration {
        org.openapis.openapi.models.operations.GetAnIntegrationResponse getAnIntegration(
            String integrationId,
            String userId) throws Exception;
    }


    public interface MethodCallListUsersByWorkflowid {
        org.openapis.openapi.models.operations.ListUsersByWorkflowidResponse listUsersByWorkflowid(
            String workflowId,
            Optional<? extends String> userId) throws Exception;
    }


    public interface MethodCallUpgradeWorkflow {
        org.openapis.openapi.models.operations.UpgradeWorkflowResponse upgradeWorkflow(
            String workflowId,
            String userId) throws Exception;
    }


    public interface MethodCallListVersions {
        org.openapis.openapi.models.operations.ListVersionsResponse listVersions(
            String userId,
            String workflowId) throws Exception;
    }


    public interface MethodCallCredentialMedataByApp {
        org.openapis.openapi.models.operations.CredentialMedataByAppResponse credentialMedataByApp(
            String app) throws Exception;
    }


    public interface MethodCallStartInstallation {
        org.openapis.openapi.models.operations.StartInstallationResponse startInstallation(
            Optional<? extends org.openapis.openapi.models.operations.StartInstallationRequestBody> request) throws Exception;
    }


    public interface MethodCallCompleteInstallation {
        org.openapis.openapi.models.operations.CompleteInstallationResponse completeInstallation(
            Optional<? extends org.openapis.openapi.models.operations.CompleteInstallationRequestBody> request) throws Exception;
    }

}
