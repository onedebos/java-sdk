/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapis.openapi.utils.LazySingletonValue;
import org.openapis.openapi.utils.Utils;
/**
 * DeleteAUserResponseBody - 200
 */

public class DeleteAUserResponseBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    private Optional<? extends Boolean> success;

    @JsonCreator
    public DeleteAUserResponseBody(
            @JsonProperty("success") Optional<? extends Boolean> success) {
        Utils.checkNotNull(success, "success");
        this.success = success;
    }
    
    public DeleteAUserResponseBody() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Boolean> success() {
        return (Optional<Boolean>) success;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public DeleteAUserResponseBody withSuccess(boolean success) {
        Utils.checkNotNull(success, "success");
        this.success = Optional.ofNullable(success);
        return this;
    }

    public DeleteAUserResponseBody withSuccess(Optional<? extends Boolean> success) {
        Utils.checkNotNull(success, "success");
        this.success = success;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteAUserResponseBody other = (DeleteAUserResponseBody) o;
        return 
            java.util.Objects.deepEquals(this.success, other.success);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            success);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteAUserResponseBody.class,
                "success", success);
    }
    
    public final static class Builder {
 
        private Optional<? extends Boolean> success;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder success(boolean success) {
            Utils.checkNotNull(success, "success");
            this.success = Optional.ofNullable(success);
            return this;
        }

        public Builder success(Optional<? extends Boolean> success) {
            Utils.checkNotNull(success, "success");
            this.success = success;
            return this;
        }
        
        public DeleteAUserResponseBody build() {
            if (success == null) {
                success = _SINGLETON_VALUE_Success.value();
            }
            return new DeleteAUserResponseBody(
                success);
        }

        private static final LazySingletonValue<Optional<? extends Boolean>> _SINGLETON_VALUE_Success =
                new LazySingletonValue<>(
                        "success",
                        "true",
                        new TypeReference<Optional<? extends Boolean>>() {});
    }
}

