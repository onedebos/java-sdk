/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class CredentialMedataByAppRequest {

    /**
     * Name of App (camelCased, can be found in App Metadata response)
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=app")
    private String app;

    @JsonCreator
    public CredentialMedataByAppRequest(
            String app) {
        Utils.checkNotNull(app, "app");
        this.app = app;
    }

    /**
     * Name of App (camelCased, can be found in App Metadata response)
     */
    @JsonIgnore
    public String app() {
        return app;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Name of App (camelCased, can be found in App Metadata response)
     */
    public CredentialMedataByAppRequest withApp(String app) {
        Utils.checkNotNull(app, "app");
        this.app = app;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CredentialMedataByAppRequest other = (CredentialMedataByAppRequest) o;
        return 
            java.util.Objects.deepEquals(this.app, other.app);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            app);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CredentialMedataByAppRequest.class,
                "app", app);
    }
    
    public final static class Builder {
 
        private String app;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Name of App (camelCased, can be found in App Metadata response)
         */
        public Builder app(String app) {
            Utils.checkNotNull(app, "app");
            this.app = app;
            return this;
        }
        
        public CredentialMedataByAppRequest build() {
            return new CredentialMedataByAppRequest(
                app);
        }
    }
}

