/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapis.openapi.models.errors.SDKError;
import org.openapis.openapi.utils.LazySingletonValue;
import org.openapis.openapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class RerunWorkfowRequestBuilder {

    private String workflowId;
    private String executionId;
    private String userId;
    private final SDKMethodInterfaces.MethodCallRerunWorkfow sdk;

    public RerunWorkfowRequestBuilder(SDKMethodInterfaces.MethodCallRerunWorkfow sdk) {
        this.sdk = sdk;
    }

    public RerunWorkfowRequestBuilder workflowId(String workflowId) {
        Utils.checkNotNull(workflowId, "workflowId");
        this.workflowId = workflowId;
        return this;
    }

    public RerunWorkfowRequestBuilder executionId(String executionId) {
        Utils.checkNotNull(executionId, "executionId");
        this.executionId = executionId;
        return this;
    }

    public RerunWorkfowRequestBuilder userId(String userId) {
        Utils.checkNotNull(userId, "userId");
        this.userId = userId;
        return this;
    }

    public RerunWorkfowResponse call() throws Exception {

        return sdk.rerunWorkfow(
            workflowId,
            executionId,
            userId);
    }
}
