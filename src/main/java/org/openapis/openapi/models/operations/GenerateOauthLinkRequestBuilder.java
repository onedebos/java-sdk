/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapis.openapi.models.errors.SDKError;
import org.openapis.openapi.utils.LazySingletonValue;
import org.openapis.openapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class GenerateOauthLinkRequestBuilder {

    private String userId;
    private Optional<? extends String> app = Optional.empty();
    private Optional<? extends String> credentialName = Utils.readDefaultOrConstValue(
                            "credentialName",
                            "\"the credentialName\"",
                            new TypeReference<Optional<? extends String>>() {});
    private final SDKMethodInterfaces.MethodCallGenerateOauthLink sdk;

    public GenerateOauthLinkRequestBuilder(SDKMethodInterfaces.MethodCallGenerateOauthLink sdk) {
        this.sdk = sdk;
    }

    public GenerateOauthLinkRequestBuilder userId(String userId) {
        Utils.checkNotNull(userId, "userId");
        this.userId = userId;
        return this;
    }
                
    public GenerateOauthLinkRequestBuilder app(String app) {
        Utils.checkNotNull(app, "app");
        this.app = Optional.of(app);
        return this;
    }

    public GenerateOauthLinkRequestBuilder app(Optional<? extends String> app) {
        Utils.checkNotNull(app, "app");
        this.app = app;
        return this;
    }
                
    public GenerateOauthLinkRequestBuilder credentialName(String credentialName) {
        Utils.checkNotNull(credentialName, "credentialName");
        this.credentialName = Optional.of(credentialName);
        return this;
    }

    public GenerateOauthLinkRequestBuilder credentialName(Optional<? extends String> credentialName) {
        Utils.checkNotNull(credentialName, "credentialName");
        this.credentialName = credentialName;
        return this;
    }

    public GenerateOauthLinkResponse call() throws Exception {
        if (credentialName == null) {
            credentialName = _SINGLETON_VALUE_CredentialName.value();
        }

        return sdk.generateOauthLink(
            userId,
            app,
            credentialName);
    }

    private static final LazySingletonValue<Optional<? extends String>> _SINGLETON_VALUE_CredentialName =
            new LazySingletonValue<>(
                    "credentialName",
                    "\"the credentialName\"",
                    new TypeReference<Optional<? extends String>>() {});
}
